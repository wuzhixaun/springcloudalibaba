apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-alibaba
  namespace: kube-ops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-cloud-alibaba
  template:
    metadata:
      labels:
        app: spring-cloud-alibaba
    spec:
      #构建初始化镜像(通过初始化镜像的方式集成SkyWalking Agent)
      initContainers:
        - image: registry.cn-shenzhen.aliyuncs.com/devan/skywalking-agent-sidecar:8.5.0
          name: sw-agent-sidecar
          imagePullPolicy: IfNotPresent
          command: [ "sh" ]
          args:
            [
                "-c",
                "cp -R /usr/skywalking/agent/* /skywalking/agent",
            ]
          volumeMounts:
            - mountPath: /skywalking/agent
              name: sw-agent

      containers:
        - name: spring-cloud-alibaba
          image: $image
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: liveness-port
          livenessProbe:
            httpGet:
              port: liveness-port
              path: /healthz
            initialDelaySeconds: 10
            periodSeconds: 10

          env:
            - name: TZ
              value: Asia/Shanghai
            #这里通过JAVA_TOOL_OPTIONS，而不是JAVA_OPTS可以实现不通过将agent命令加入到java应用jvm参数而实现agent的集成
            - name: JAVA_TOOL_OPTIONS
              value: -javaagent:/usr/skywalking/agent/skywalking-agent.jar
            - name: SW_AGENT_NAME
              value: spring-boot-skywalking-demo
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
              # FQDN: servicename.namespacename.svc.cluster.local
              value: skywalking-oap.kube-ops.svc:11800
          volumeMounts:
            - mountPath: /usr/skywalking/agent
              name: sw-agent

---
apiVersion: v1
kind: Service
metadata:
  name: spring-cloud-alibaba
  namespace: kube-ops
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: spring-cloud-alibaba
      nodePort: 30008
  selector:
    app: spring-cloud-alibaba
  type: NodePort